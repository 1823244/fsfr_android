

&НаКлиенте
//читает данные из файла Excel и помещает их в массив структур. Структура - репрезентация строки эксель
Функция ПрочитатьФайл()
		
		ВремяНачала=ТекущаяДата();
		Excel = Новый COMОбъект("Excel.Application");
		Workbook      = Excel.Workbooks.Open(ИмяФайла);
		
		//находим нужный лист
		Лист = Неопределено;
		Для i = 1 По Workbook.Sheets.Count() Цикл
			Если Workbook.Sheets.item(i).Name = ИмяЛиста Тогда
				Лист = Workbook.Sheets.item(i);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		//если лист не найден, что вобщем-то абсурдно, т.к. мы получили имя из списка листов этой книги, выходим из процедуры
		Если Лист = Неопределено Тогда
			//СУУ_Лог.ЗаписатьСообщение(ИДВызова, "завершение", Неопределено, "НЕ найден указанный лист!");
			Возврат Ложь;
		КонецЕсли;		
		
		//в этом соответствии будем искать имя колонки. т.е. фактически имя поля структуры.
		НомераКолонок = Новый Соответствие;//для поиска имени колонки по номеру
		
		МассивСтрок = Новый Массив; //сюда будем складывать строки таблицы
		
		СтрокаКлючей = "";
		
		xlLastCell = 11;
		
		//RowCount = Excel.ActiveCell.SpecialCells(xlLastCell).Row;//COMОбъект.ActiveCell.CurrentRegion.Rows.Count;//ActiveCell.Row;
		ColumnCount = Excel.ActiveCell.SpecialCells(xlLastCell).Column;//ActiveCell.Column;
		
		Для сч = 1 По ColumnCount Цикл
			
			ИмяКол = СокрЛП(Лист.Cells(1, сч).value);
			ИмяКол = СтрЗаменить(ИмяКол ,")","");
			ИмяКол = СтрЗаменить(ИмяКол ,"(","");
			ИмяКол = СтрЗаменить(ИмяКол ,"/","");
			ИмяКол = СтрЗаменить(ИмяКол ,"\","");
			ИмяКол = СтрЗаменить(ИмяКол ," ","_");
			СтрокаКлючей = СтрокаКлючей + ИмяКол + ",";
			
			Если НЕ ЗначениеЗаполнено(ИмяКол) Тогда
				ИмяКол = "ПустаяКолонка"+Строка(сч);
			КонецЕсли;
			НомераКолонок.Вставить(сч, ИмяКол);
			
		КонецЦикла;
		//убрать последнюю запятую
		СтрокаКлючей = Лев(СтрокаКлючей, СтрДлина(СтрокаКлючей)-1);
		
		//цикл по строкам
		Стр = 2;      //в первой строке - заголовки колонок
		EOF = ЛОЖЬ;
		Пока НЕ EOF Цикл
			
			//проверка конца файла. признак - 10 пустых строк подряд. проверяем по первой колонке
			Если НЕ ЗначениеЗаполнено(Лист.Cells(Стр, 1).value) Тогда
				ЕстьЗначение = Ложь;
				Для сч = 1 по 9 Цикл
					Если ЗначениеЗаполнено(Лист.Cells(Стр+сч, 1).value) Тогда
						ЕстьЗначение = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НЕ ЕстьЗначение Тогда
					EOF = Истина;
					Прервать;//выходим из цикла по строкам файла эксель
				КонецЕсли;
			КонецЕсли;
			
			//НовСтр = ТЗРекордсет.Добавить();
			
			//аналог строки таблицы
			СтруктураСтроки = Новый Структура(СтрокаКлючей);
			
			//цикл по колонкам
			Для Кол = 1 По ColumnCount Цикл
				
				ИмяКолоки = НомераКолонок.Получить(Кол);//соответствие
				
				СтруктураСтроки.Вставить(ИмяКолоки, Лист.Cells(Стр, Кол).value);
				
			КонецЦикла;
			
			МассивСтрок.Добавить(СтруктураСтроки);
			
			Стр = Стр + 1;
			
		КонецЦикла;
		
		Excel.Quit();
		Excel = 0;
		
		
		Возврат МассивСтрок;
		
	
КонецФункции

//загрузка вопросов
&НаСервере
Процедура ЗагрузитьНаСервере(МассивСтрок)
	
	
	//Пример вопроса:
	//--==Код вопроса: 14.1.107
	//К средним (averages) арифметическим и геометрическим невзвешенным относятся: 
	//I. Value Line 
	//II. DJIA
	//III.	Nikkei225
	//IV.	S&P500
	//V.	DAX
	// Ответы:
	//A.	Только I, II, III
	//B.	Только IV, V
	//C.	Только II, III
	//D.	Все
	
	//АЛГОРИТМ
	
	//все, что находится между строками 
	
	//--==Код вопроса: 14.1.107
	//...
	// Ответы:
	
	//является вопросом и помещается в регистр ФСФРБазовыйВопросы
	
	//строки после "Ответы:" помещаются в регистр ФСФРБазовыйОтветы  (это варианты ответов)
	
	
	сч=0; //счетчик строк массива
	
	Пока сч<=МассивСтрок.Количество() Цикл
		
		Стр = МассивСтрок[сч];
		т1 = ВРег(СокрЛП(Стр["ColA"]));
		
		Если Найти(т1, "КОД ВОПРОСА")>0 Тогда
			
			//получаем номер вопроса
			п = Найти(т1, ":");
			КодВопроса = СокрЛП(Прав(т1, СтрДлина(т1)-п)); //КодВопроса = "14.2.7"
			СтруктураКодов = ПолучитьКодыВопроса(КодВопроса);
			Глава = СтруктураКодов.Глава;
			НомерВопроса = СтруктураКодов.НомерВопроса;
			Цена = СтруктураКодов.Цена;
			
			//ищем строку "Ответы" и пока ее не нашли собираем текст вопроса
			ТекстВопроса = "";
			сч=сч+1; //обязательно нужно перейти на следующую строку перед циклом
			Пока 1=1 Цикл
				Стр = МассивСтрок[сч];
				
				Если Найти(ВРег(СокрЛП(Стр["ColA"])), "ОТВЕТЫ:")>0 Тогда
					Прервать;
				КонецЕсли;
				
				ТекстВопроса=ТекстВопроса+СокрЛП(Стр["ColA"])+Символы.ПС;
				
				сч=сч+1;
			КонецЦикла;
			
			
			//добавляем вопрос в регистр сведений ФСФРБазовыйВопросы
			НаборЗаписейВ = РегистрыСведений.ФСФРБазовыйВопросы.СоздатьНаборЗаписей(); 
			НаборЗаписейВ.Отбор.КодВопроса.Установить(КодВопроса);
			НаборЗаписейВ.Отбор.Глава.Установить(Глава);
			НаборЗаписейВ.Отбор.НомерВопроса.Установить(НомерВопроса);
			НоваяЗапись = НаборЗаписейВ.Добавить();
			НоваяЗапись.КодВопроса = КодВопроса;
			НоваяЗапись.Глава = Глава;
			НоваяЗапись.НомерВопроса = НомерВопроса;
			НоваяЗапись.Вопрос = ТекстВопроса;
			НоваяЗапись.Цена = Цена;
			НаборЗаписейВ.Записать();
			
			//добавляем ответы в регистр сведений ФСФРБазовыйОтветы
			//мы сейчас на строке "Ответы:", поэтому перейдем к следующей
			сч=сч+1;
			
			Пока 1=1 Цикл
				Попытка
					Стр = МассивСтрок[сч];
				Исключение
					//для отладки. сюда попадем в конце файла.
					а=12;  Возврат;
				КонецПопытки;
				
				т1 = СокрЛП(Стр["ColA"]);  //вариант ответа (А В С)
				
				//если дошли до пустой строки - выходим из цикла, т.к. это конец списка ответов к данному вопросу
				//иногда пустой строки может не быть, а сразу будет строка с заголовком вопроса "--==Код вопроса: 11.1.48"
				Если НЕ ЗначениеЗаполнено(т1) или т1 = "" ИЛИ Найти(ВРег(т1), "КОД ВОПРОСА:")>0 Тогда
					Прервать;
				КонецЕсли;
					
				//добавляем ответ
				
				//уберем плюс, если есть (я им отмечал правильные ответы)
				й = СтрЗаменить(т1,"+","");
				й = СтрЗаменить(й,".","");				
				НаборЗаписей = РегистрыСведений.ФСФРБазовыйОтветы.СоздатьНаборЗаписей(); 
				НаборЗаписей.Отбор.кодВопроса.Установить(КодВопроса);
				НаборЗаписей.Отбор.НомерВарианта.Установить(й);
				НаборЗаписей.Отбор.Глава.Установить(Глава);
				НаборЗаписей.Отбор.НомерВопроса.Установить(НомерВопроса);
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.КодВопроса = КодВопроса;
				НоваяЗапись.НомерВарианта = й;                      	//A.
				НоваяЗапись.Глава = Глава;
				НоваяЗапись.НомерВопроса = НомерВопроса;
				НоваяЗапись.ВариантОтвета = МассивСтрок[сч]["ColB"];   	//I или II.
				НаборЗаписей.Записать();
				
				сч=сч+1;
			КонецЦикла;
		Иначе
			//не нашли в строке текст "КОД ВОПРОСА:", переходим к следующей
			сч=сч+1;	
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	М = ПрочитатьФайл();
	ЗагрузитьНаСервере(М);
КонецПроцедуры

//загрузка правильных ответов
&НаСервере
Процедура ЗагрузитьПравильныеОтветыНаСервере(МассивСтрок)
	//в строке - 2 колонки "Код", "Ответ"
	
	сч=0; //счетчик строк массива
	
	Пока сч<=МассивСтрок.Количество() Цикл
		
		Стр = МассивСтрок[сч];
		КодВопроса = ВРег(СокрЛП(Стр["Код"]));
		Ответ = ВРег(СокрЛП(Стр["Ответ"]));
		
		СтруктураКодов = ПолучитьКодыВопроса(КодВопроса);
		
		Глава = СтруктураКодов.Глава;
		НомерВопроса = СтруктураКодов.НомерВопроса;
		
		НаборЗаписей = РегистрыСведений.ФСФРБазовыйПравильныеОтветы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.КодВопроса.Установить(КодВопроса);
		НаборЗаписей.Отбор.Глава.Установить(Глава);
		НаборЗаписей.Отбор.НомерВопроса.Установить(НомерВопроса);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.КодВопроса = КодВопроса;
		НоваяЗапись.Глава = Глава;
		НоваяЗапись.НомерВопроса = НомерВопроса;
		НоваяЗапись.НомерОтвета = Ответ;
		
		НаборЗаписей.Записать();
		
		сч=сч+1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПравильныеОтветы(Команда)
	М = ПрочитатьФайл();
	ЗагрузитьПравильныеОтветыНаСервере(М);
КонецПроцедуры

//сервисные функции
&НаКлиентеНаСервереБезКонтекста
Функция РимскоеЧисло(Й)
	
	Если Й=1 ИЛИ Й="1" Тогда
		Ж = "I";
	ИначеЕсли Й=2 ИЛИ Й="2" Тогда
		Ж = "II";
	ИначеЕсли Й=3 ИЛИ Й="3" Тогда
		Ж = "III";
	ИначеЕсли Й=4 ИЛИ Й="4" Тогда
		Ж = "IV";
	ИначеЕсли Й=5 ИЛИ Й="5" Тогда
		Ж = "V";
	ИначеЕсли Й=6 ИЛИ Й="6" Тогда
		Ж = "VI";
	ИначеЕсли Й=7 ИЛИ Й="7" Тогда
		Ж = "VII";
	ИначеЕсли Й=8 ИЛИ Й="8" Тогда
		Ж = "VIII";
	ИначеЕсли Й=9 ИЛИ Й="9" Тогда
		Ж = "IX";
	ИначеЕсли Й=10 ИЛИ Й="10" Тогда
		Ж = "X";
	ИначеЕсли Й=11 ИЛИ Й="11" Тогда
		Ж = "XI";
	ИначеЕсли Й=12 ИЛИ Й="12" Тогда
		Ж = "XII";
	ИначеЕсли Й=13 ИЛИ Й="13" Тогда
		Ж = "XIII";
	ИначеЕсли Й=14 ИЛИ Й="14" Тогда
		Ж = "XIV";
	ИначеЕсли Й=15 ИЛИ Й="15" Тогда
		Ж = "XV";
	ИначеЕсли Й=16 ИЛИ Й="16" Тогда
		Ж = "XVI";
	ИначеЕсли Й=17 ИЛИ Й="17" Тогда
		Ж = "XVII";
	ИначеЕсли Й=18 ИЛИ Й="18" Тогда
		Ж = "XVIII";
	ИначеЕсли Й=19 ИЛИ Й="19" Тогда
		Ж = "IX";
	ИначеЕсли Й=20 ИЛИ Й="20" Тогда
		Ж = "XX";
	КонецЕсли;
	
	Возврат  Ж;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьКодыВопроса(КодВопроса)
	
	Рез = РазложитьСтрокуВМассивПодстрок(КодВопроса,".");
	Если Рез.Количество()>0 Тогда
		
		//Попытка
			Возврат Новый Структура("Глава, Цена, НомерВопроса", Рез.Получить(0), Рез.Получить(1), Рез.Получить(2));
		//Исключение
		//	а=12;
		//КонецПопытки;
		
		
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

// Функция "расщепляет" строку на подстроки, используя заданный
//      разделитель. Разделитель может иметь любую длину.
//      Если в качестве разделителя задан пробел, рядом стоящие пробелы
//      считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//      игнорируются.
//      Например,
//      РазложитьСтрокуВМассивПодстрок(",один,,,два", ",") возвратит массив значений из пяти элементов,
//      три из которых - пустые строки, а
//      РазложитьСтрокуВМассивПодстрок(" один   два", " ") возвратит массив значений из двух элементов
//
//  Параметры:
//      Стр -           строка, которую необходимо разложить на подстроки.
//                      Параметр передается по значению.
//      Разделитель -   строка-разделитель, по умолчанию - запятая.
//
//  Возвращаемое значение:
//      массив значений, элементы которого - подстроки
//
&НаКлиентеНаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр, Поз - 1));
			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				Если (СокрЛП(Стр) <> "") Тогда
					МассивСтрок.Добавить(Стр);
				КонецЕсли;
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз - 1));
			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции 




